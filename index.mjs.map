{"version":3,"file":"index.mjs","sources":["../lib/accessors.js","../lib/ndarray.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport abs from '@stdlib/math-base-special-abs';\n\n\n// VARIABLES //\n\nvar M = 6;\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} sum\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0 ];\n*\n* var s = gasum( x.length, arraylike2object( toAccessorArray( x ) ), 1, 0 );\n* // returns 15.0\n*/\nfunction gasum( N, x, stride, offset ) {\n\tvar buf;\n\tvar get;\n\tvar sum;\n\tvar ix;\n\tvar m;\n\tvar i;\n\n\tbuf = x.data;\n\tget = x.accessors[ 0 ];\n\n\tsum = 0.0;\n\tix = offset;\n\tif ( stride === 0 ) {\n\t\tsum = abs( get( buf, ix ) * N );\n\t\treturn sum;\n\t}\n\n\t// Use unrolled loops if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tsum += abs( get( buf, ix ) );\n\t\t\t\tix += stride;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn sum;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tsum += abs( get( buf, ix ) ) + abs( get( buf, ix+1 ) ) + abs( get( buf, ix+2 ) ) + abs( get( buf, ix+3 ) ) + abs( get( buf, ix+4 ) ) + abs( get( buf, ix+5 ) ); // eslint-disable-line max-len\n\t\t\tix += M;\n\t\t}\n\t\treturn sum;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tsum += abs( get( buf, ix ) );\n\t\tix += stride;\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nexport default gasum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport abs from '@stdlib/math-base-special-abs';\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport accessors from './accessors.js';\n\n\n// VARIABLES //\n\nvar M = 6;\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - `x` stride length\n* @param {NonNegativeInteger} offset - starting `x` index\n* @returns {number} sum\n*\n* @example\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1, 0 );\n* // returns 15.0\n*/\nfunction gasum( N, x, stride, offset ) {\n\tvar sum;\n\tvar ix;\n\tvar m;\n\tvar i;\n\tvar o;\n\n\tsum = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn sum;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, o, stride, offset );\n\t}\n\n\tix = offset;\n\tif ( stride === 0 ) {\n\t\tsum = abs( x[ix] * N );\n\t\treturn sum;\n\t}\n\n\t// Use unrolled loops if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tsum += abs( x[ix] );\n\t\t\t\tix += stride;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn sum;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tsum += abs( x[ix] ) + abs( x[ix+1] ) + abs( x[ix+2] ) + abs( x[ix+3] ) + abs( x[ix+4] ) + abs( x[ix+5] ); // eslint-disable-line max-len\n\t\t\tix += M;\n\t\t}\n\t\treturn sum;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tsum += abs( x[ix] );\n\t\tix += stride;\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nexport default gasum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {PositiveInteger} stride - `x` stride length\n* @returns {number} sum\n*\n* @example\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1 );\n* // returns 15.0\n*/\nfunction gasum( N, x, stride ) {\n\treturn ndarray( N, x, stride, stride2offset( N, stride ) );\n}\n\n\n// EXPORTS //\n\nexport default gasum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to compute the sum of absolute values.\n*\n* @module @stdlib/blas-base-gasum\n*\n* @example\n* import gasum from '@stdlib/blas-base-gasum';\n*\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1 );\n* // 15.0\n*\n* @example\n* // Use the `ndarray` interface...\n* import { ndarray as gasum } from '@stdlib/blas-base-gasum';\n*\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1, 0 );\n* // 15.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["M","gasum","N","x","stride","offset","sum","ix","m","i","o","arraylike2object","accessorProtocol","buf","get","data","accessors","abs","ndarray","stride2offset","setReadOnly","main"],"mappings":";;maA2BA,IAAIA,EAAI,ECER,IAAIA,EAAI,EAoBR,SAASC,EAAOC,EAAGC,EAAGC,EAAQC,GAC7B,IAAIC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAJ,EAAM,EACDJ,GAAK,EACT,OAAOI,EAGR,IADAI,EAAIC,EAAkBR,IACfS,iBACN,ODVF,SAAgBV,EAAGC,EAAGC,EAAQC,GAC7B,IAAIQ,EACAC,EACAR,EACAC,EACAC,EACAC,EAOJ,GALAI,EAAMV,EAAEY,KACRD,EAAMX,EAAEa,UAAW,GAEnBV,EAAM,EACNC,EAAKF,EACW,IAAXD,EAEJ,OADMa,EAAKH,EAAKD,EAAKN,GAAOL,GAK7B,GAAgB,IAAXE,EAAe,CAInB,IAHAI,EAAIN,EAAIF,GAGC,EACR,IAAMS,EAAI,EAAGA,EAAID,EAAGC,IACnBH,GAAOW,EAAKH,EAAKD,EAAKN,IACtBA,GAAMH,EAGR,GAAKF,EAAIF,EACR,OAAOM,EAER,IAAMG,EAAID,EAAGC,EAAIP,EAAGO,GAAKT,EACxBM,GAAOW,EAAKH,EAAKD,EAAKN,IAASU,EAAKH,EAAKD,EAAKN,EAAG,IAAQU,EAAKH,EAAKD,EAAKN,EAAG,IAAQU,EAAKH,EAAKD,EAAKN,EAAG,IAAQU,EAAKH,EAAKD,EAAKN,EAAG,IAAQU,EAAKH,EAAKD,EAAKN,EAAG,IACzJA,GAAMP,EAEP,OAAOM,CACP,CACD,IAAMG,EAAI,EAAGA,EAAIP,EAAGO,IACnBH,GAAOW,EAAKH,EAAKD,EAAKN,IACtBA,GAAMH,EAEP,OAAOE,CACR,CCjCSU,CAAWd,EAAGQ,EAAGN,EAAQC,GAIjC,GADAE,EAAKF,EACW,IAAXD,EAEJ,OADAE,EAAMW,EAAKd,EAAEI,GAAML,GAKpB,GAAgB,IAAXE,EAAe,CAInB,IAHAI,EAAIN,EAAIF,GAGC,EACR,IAAMS,EAAI,EAAGA,EAAID,EAAGC,IACnBH,GAAOW,EAAKd,EAAEI,IACdA,GAAMH,EAGR,GAAKF,EAAIF,EACR,OAAOM,EAER,IAAMG,EAAID,EAAGC,EAAIP,EAAGO,GAAKT,EACxBM,GAAOW,EAAKd,EAAEI,IAAQU,EAAKd,EAAEI,EAAG,IAAOU,EAAKd,EAAEI,EAAG,IAAOU,EAAKd,EAAEI,EAAG,IAAOU,EAAKd,EAAEI,EAAG,IAAOU,EAAKd,EAAEI,EAAG,IACpGA,GAAMP,EAEP,OAAOM,CACP,CACD,IAAMG,EAAI,EAAGA,EAAIP,EAAGO,IACnBH,GAAOW,EAAKd,EAAEI,IACdA,GAAMH,EAEP,OAAOE,CACR,CCtDA,SAASL,EAAOC,EAAGC,EAAGC,GACrB,OAAOc,EAAShB,EAAGC,EAAGC,EAAQe,EAAejB,EAAGE,GACjD,CCQAgB,EAAAC,EAAA,UAAAH"}